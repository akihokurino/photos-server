directive @juniper(
    ownership: String = "borrowed",
    infallible: Boolean = false,
    with_time_zone: Boolean = true,
    async: Boolean = false,
    stream_item_infallible: Boolean = true,
    stream_type: String = null
) on FIELD_DEFINITION | SCALAR

schema {
    query: Query
    mutation: Mutation
}

type Query {
    me: Me! @juniper(ownership: "owned", async: true)
    others: OtherConnection! @juniper(ownership: "owned", async: true)
}

type Mutation {
    signUp(input: SignUpInput!): Me! @juniper(ownership: "owned", async: true)
    updateUserInfo(input: UpdateUserInfoInput!): Me! @juniper(ownership: "owned", async: true)
    leave: Boolean! @juniper(ownership: "owned", async: true)
}

interface Node {
    id: ID! @juniper(ownership: "owned")
}

type Me implements Node {
    id: ID! @juniper(ownership: "owned")
    name: String! @juniper(ownership: "owned")
}

type Other implements Node {
    id: ID! @juniper(ownership: "owned")
    name: String! @juniper(ownership: "owned")
}

type OtherEdge {
    node: Other! @juniper(ownership: "owned", async: true)
}

type OtherConnection {
    edges: [OtherEdge!]! @juniper(ownership: "owned", async: true)
}

input SignUpInput {
    name: String!
}

input UpdateUserInfoInput {
    name: String!
}